{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PersonItem.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PersonItem","people","useParams","findParent","parentName","parent","find","findPerson","born","died","motherName","fatherName","PeopleTable","map","PeoplePage","useState","isError","setIsError","setPeople","isLoaded","setIsLoaded","getPeopleFromServer","peopleList","useEffect","length","PageNotFound","Navbar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d9ac885e.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`/people/${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport { useParams, NavLink } from 'react-router-dom';\n\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  people: Person[],\n  person: Person,\n};\n\nexport const PersonItem: React.FC<Props> = ({ people, person }) => {\n  const { slug } = useParams();\n\n  const findParent = (parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const parent = people.find(findPerson => findPerson.name === parentName);\n\n    if (parent) {\n      return <PersonLink person={parent} />;\n    }\n\n    return parentName;\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}`}\n          className={classNames({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{findParent(person.motherName)}</td>\n      <td>{findParent(person.fatherName)}</td>\n    </tr>\n  );\n};\n","import { Person } from '../types';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            people={people}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      const peopleList = await getPeople();\n\n      setPeople(peopleList);\n      setIsLoaded(true);\n    } catch (error) {\n      setIsError(true);\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!isLoaded && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isLoaded && !isError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoaded && !isError && (\n            <PeopleTable people={people} />\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          }))}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          }))}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}